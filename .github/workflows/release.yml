name: Release kernel deb packages
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      patch_kernel:
        description: "Patch kernel to new version"
        required: false
        default: 'false'
        type: boolean
      kernel_version:
        description: "Select kernel version"
        required: true
        default: '38'
        type: string
      arch:
        description: "Target architecture"
        required: true
        default: 'arm64'
        type: choice
        options:
          - arm64
          - armv7
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'
        type: choice
        options:
          - true
          - false

jobs:
  build:
    name: Build kernel
    runs-on: ubuntu-22.04-arm
    steps:
      - name: Prepare
        run: |
          sudo apt-get -y update
          sudo apt-get -y install git lsb-release gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf bison flex build-essential libssl-dev libelf-dev debhelper bc rsync kmod cpio wget patchutils xz-utils
          sudo timedatectl set-timezone Asia/Jakarta
          sudo hostnamectl set-hostname chewy

      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare repository
        run: git config --global --add safe.directory "$(pwd)"

      - name: Patching kernel to 6.12.${{ inputs.kernel_version }}
        if: (github.event.inputs.patch_kernel == 'true')
        run: |
          for i in `seq 33 ${{ inputs.kernel_version }}`; do
            fp=$(($i-1))-$i
            wget -q "https://www.kernel.org/pub/linux/kernel/v6.x/incr/patch-6.12.$fp.xz"
            unxz patch-6.12.$fp.xz
            echo "Patching kernel 6.12.$(($i-1)) to 6.12.$i"
            patch -p1 < patch-6.12.$fp
            rm patch-6.12.$fp
          done

      - name: SSH connection to Actions
        uses: csexton/debugger-action@master
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')

      - name: Build
        run: |
          if [[ "${{ inputs.arch }}" == "arm64" ]]; then
            export CROSS_COMPILE=aarch64-linux-gnu-
            export ARCH=arm64
          else
            export CROSS_COMPILE=arm-linux-gnueabihf-
            export ARCH=arm
            export DEB_HOST_ARCH=armhf
          fi
          export LOCALVERSION=
          make LOCALVERSION= mrproper
          make uz801v3_defconfig
          make deb-pkg -j"$(($(grep -c processor < /proc/cpuinfo)*2))"

      - name: Prepare artifacts
        run: mkdir artifacts && mv ../linux-*$(ls ../linux-image-* | cut -d'_' -f1|cut -d'-' -f3)* artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel
          path: artifacts/*

  bootimg:
    permissions:
      contents: write
    name: Make boot images
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Prepare
        run: |
          sudo apt-get -y update
          sudo apt-get -y install binfmt-support qemu-user-static mkbootimg
          mkdir artifacts

      - name: Checkout
        uses: actions/checkout@v4

      - name: Download kernel
        uses: actions/download-artifact@v4
        with:
          name: kernel
          path: artifacts

      - name: Build
        run: |
          cd .github/scripts
          chmod +x ./build_boot_img.sh
          sudo ./build_boot_img.sh ${{ inputs.arch }}

      - name: Generate release tag
        id: version
        run: |
          NAME=$(ls artifacts/linux-image-* | cut -d'_' -f1|cut -d'-' -f3)
          TAG_NAME=$(echo v$NAME-${{ inputs.arch }})
          git log -1 --format=%b > changes.txt
          gh release delete "$TAG_NAME" --yes || true
          git tag -d "$TAG_NAME" 2>/dev/null || true
          git push --delete origin "$TAG_NAME" 2>/dev/null || true
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"
          echo "NAME=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Releases
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.version.outputs.NAME }}
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
          body_path: changes.txt
          files: artifacts/*
